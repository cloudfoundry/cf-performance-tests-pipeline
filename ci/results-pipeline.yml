resources:
- name: cf-performance-tests-pipeline
  type: git
  icon: github
  source:
    uri: https://github.com/cloudfoundry/cf-performance-tests-pipeline.git
    username: ((ari-wg-gitbot-username))
    password: ((ari-wg-gitbot-token))
    branch: ((results-branch))
    paths: [ci/results-pipeline.yml, ci/tasks/generate-charts/*, ci/tasks/generate-coverage-table/*, variables/common.yml]

- name: results
  type: git
  icon: github
  source:
    uri: https://github.com/cloudfoundry/cf-performance-tests-pipeline.git
    username: ((ari-wg-gitbot-username))
    password: ((ari-wg-gitbot-token))
    branch: ((results-branch))
    paths: [results/**/*.json]

- name: cf-performance-tests-pipeline-push
  type: git
  icon: github
  source:
    uri: https://github.com/cloudfoundry/cf-performance-tests-pipeline.git
    username: ((ari-wg-gitbot-username))
    password: ((ari-wg-gitbot-token))
    branch: ((results-branch))

jobs:
- name: set-pipeline
  serial: true
  plan:
  - get: cf-performance-tests-pipeline
    trigger: true
  - set_pipeline: self
    file: cf-performance-tests-pipeline/ci/results-pipeline.yml
    var_files:
      - cf-performance-tests-pipeline/variables/common.yml

- name: generate-charts
  serial: true
  plan:
  - get: cf-performance-tests-pipeline
    trigger: true
    passed: [set-pipeline]
  - get: results
    trigger: true
  - task: generate-charts-rails-postgres-15
    file: cf-performance-tests-pipeline/ci/tasks/generate-charts/task.yml
    input_mapping:
      cf-performance-tests-pipeline: results
    output_mapping:
      cf-performance-tests-pipeline: results-with-rails-postgres-15-charts
    params:
      GIT_COMMIT_EMAIL: ((ari-wg-gitbot-email))
      GIT_COMMIT_USERNAME: ((ari-wg-gitbot-username))
      GIT_COMMIT_MESSAGE: Generate charts for rails cc with postgres 15 ccdb
      CCDB: postgres15
      CLOUD_CONTROLLER_TYPE: rails
  - task: generate-charts-rails-postgres-16
    file: cf-performance-tests-pipeline/ci/tasks/generate-charts/task.yml
    input_mapping:
      cf-performance-tests-pipeline: results-with-rails-postgres-15-charts
    output_mapping:
      cf-performance-tests-pipeline: results-with-rails-postgres-15-16-charts
    params:
      GIT_COMMIT_EMAIL: ((ari-wg-gitbot-email))
      GIT_COMMIT_USERNAME: ((ari-wg-gitbot-username))
      GIT_COMMIT_MESSAGE: Generate charts for rails cc with postgres 16 ccdb
      CCDB: postgres
      CLOUD_CONTROLLER_TYPE: rails
  - task: generate-charts-rails-mysql
    file: cf-performance-tests-pipeline/ci/tasks/generate-charts/task.yml
    input_mapping:
      cf-performance-tests-pipeline: results-with-rails-postgres-15-16-charts
    output_mapping:
      cf-performance-tests-pipeline: results-with-all-charts
    params:
      GIT_COMMIT_EMAIL: ((ari-wg-gitbot-email))
      GIT_COMMIT_USERNAME: ((ari-wg-gitbot-username))
      GIT_COMMIT_MESSAGE: Generate charts for rails cc with mysql ccdb
      CCDB: mysql
      CLOUD_CONTROLLER_TYPE: rails
  - put: cf-performance-tests-pipeline-push
    params:
      repository: results-with-all-charts
      rebase: true

- name: generate-coverage-table
  serial: true
  plan:
  - get: cf-performance-tests-pipeline
    trigger: true
    passed: [set-pipeline]
  - get: results
    trigger: true
  - task: generate-coverage-table
    file: cf-performance-tests-pipeline/ci/tasks/generate-coverage-table/task.yml
    params:
      COVERAGE_TABLE_FILE: results/coverage.md
      GIT_COMMIT_EMAIL: ((ari-wg-gitbot-email))
      GIT_COMMIT_USERNAME: ((ari-wg-gitbot-username))
      GIT_COMMIT_MESSAGE: Update test coverage table
  - put: cf-performance-tests-pipeline-push
    params:
      repository: results
      rebase: true
